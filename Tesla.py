import time
from selenium.webdriver.common.keys import Keys
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
def Apply(link):
    s = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=s)
    driver.get(link)  
    wait = WebDriverWait(driver, 10)
    time.sleep(5)
    driver.find_element(By.NAME, 'personal.firstName').send_keys('Shiven')
    driver.find_element(By.NAME, 'personal.lastName').send_keys('Patel')
    driver.find_element(By.NAME, 'personal.middleName').send_keys('Umeshbhai')
    phone_type_select = Select(driver.find_element(By.NAME, 'personal.phoneType'))
    phone_type_select.select_by_value('mobile')
    driver.find_element(By.NAME, 'personal.email').send_keys('shivenpatel@umass.edu')
    country_select = Select(driver.find_element(By.NAME, 'personal.country'))
    country_select.select_by_value('US')
    driver.find_element(By.NAME, 'personal.phone').send_keys('4042320349')
    resume_path = '/Users/shiven/Desktop/Shiven_Patel_Resume.pdf'
    driver.find_element(By.NAME, 'personal.resume').send_keys(resume_path)
    print("1 DONE")
    driver.find_element(By.NAME, 'next').click()
    driver.find_element(By.NAME, 'next').click()
    print("2 START")
    time.sleep(5)
    date_field = driver.find_element(By.NAME, 'job.jobAvailabilityToStartInternship')
    date_field.click()
    wait = WebDriverWait(driver, 10)
    wait.until(EC.visibility_of_element_located((By.CLASS_NAME, 'tds-date-picker')))
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'February 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'March 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'April 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'May 2024')]")
    right_arrow_button.click()
    date_to_select = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[.//span[text()='24']]")))
    date_to_select.click()
    print("2 DONE")
    duration_select = Select(driver.find_element(By.NAME, 'job.jobInternshipDuration'))
    duration_select.select_by_value('3_months')
    type_select = Select(driver.find_element(By.NAME, 'job.jobInternshipType'))
    type_select.select_by_value('full_time')
    thesis_yes_radio = driver.find_element(By.NAME, 'job.jobInternshipThesis')
    thesis_yes_radio.click()
    driver.find_element(By.NAME, 'next').click()
    print("3 START")
    time.sleep(5)
    notice_period_select = Select(driver.find_element(By.NAME, 'legal.legalNoticePeriod'))
    notice_period_select.select_by_value('immediately')
    consider_other_positions_yes = driver.find_element(By.NAME, 'legal.legalConsiderOtherPositions')
    consider_other_positions_yes.click()
    immigration_sponsorship_yes = driver.find_element(By.NAME, 'legal.legalImmigrationSponsorship')
    immigration_sponsorship_yes.click()
    former_tesla_employee_no = driver.find_element(By.XPATH, "//input[@name='legal.legalFormerTeslaEmployee' and @value='no']")
    former_tesla_employee_no.click()
    former_tesla_intern_yes = driver.find_element(By.NAME, 'legal.legalFormerTeslaInternOrContractor')
    former_tesla_intern_yes.click()
    university_student_yes = driver.find_element(By.NAME, 'legal.legalUniversityStudent')
    university_student_yes.click()
    time.sleep(2)
    grad_date_field = driver.find_element(By.NAME, 'legal.legalUniversityAnticipatedGraduationDate')
    grad_date_field.click()
    wait = WebDriverWait(driver, 10)
    wait.until(EC.visibility_of_element_located((By.CLASS_NAME, 'tds-date-picker')))
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'February 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'March 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'April 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'May 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'June 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'July 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'August 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'September 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'October 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'November 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'December 2024')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'January 2025')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'February 2025')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'March 2025')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'April 2025')]")
    right_arrow_button.click()
    right_arrow_button = driver.find_element(By.XPATH, "//button[contains(@aria-label, 'May 2025')]")
    right_arrow_button.click()
    date_to_select = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[.//span[text()='24']]")))
    date_to_select.click()
    text_message = driver.find_element(By.NAME, 'legal.legalReceiveNotifications')
    text_message.click()
    acknowledgment_checkbox = wait.until(EC.presence_of_element_located((By.NAME, 'legal.legalAcknowledgment')))
    driver.execute_script("arguments[0].scrollIntoView(true);", acknowledgment_checkbox)
    time.sleep(2)
    acknowledgment_checkbox = wait.until(EC.element_to_be_clickable((By.NAME, 'legal.legalAcknowledgment')))
    acknowledgment_checkbox.click()
    driver.find_element(By.NAME, 'legal.legalAcknowledgmentName').send_keys('Shiven Umeshbhai Patel')
    driver.find_element(By.NAME, 'next').click()
    print("4 START")
    time.sleep(5)
    disclosure_box = driver.find_element(By.CLASS_NAME, 'style_Disclaimer__toBo-')
    driver.execute_script("arguments[0].scrollTop = arguments[0].scrollHeight", disclosure_box)
    checkbox = wait.until(EC.element_to_be_clickable((By.NAME, 'eeo.eeoAcknowledgment')))
    checkbox.click()
    gender_select = Select(driver.find_element(By.NAME, 'eeo.eeoGender'))
    gender_select.select_by_value('male')
    veteran_status_select = Select(driver.find_element(By.NAME, 'eeo.eeoVeteranStatus'))
    veteran_status_select.select_by_value('no')
    race_ethnicity_select = Select(driver.find_element(By.NAME, 'eeo.eeoRaceEthnicity'))
    race_ethnicity_select.select_by_value('choose_not_to_disclose')
    disability_status_select = Select(driver.find_element(By.NAME, 'eeo.eeoDisabilityStatus'))
    disability_status_select.select_by_value('no')
    legal_name_input = driver.find_element(By.NAME, 'eeo.eeoDisabilityStatusName')
    legal_name_input.send_keys('Shiven Umeshbhai Patel')
    submit_button = driver.find_element(By.XPATH, "//button[@class='tds-btn' and @data-action-type='submit']")
    print(link)
    submit_button.click()
    time.sleep(10)
    print("4 DONE")

job_links = [
   "Put all the application links here"
]

for job_link in job_links:
    Apply(job_link)
    time.sleep(5)
